const wayland = @import("wayland.zig");
const xdg_shell = @import("xdg_shell.zig");
const linux_drm_syncobj_v1 = @import("linux_drm_syncobj_v1.zig");
pub const EventType = enum(u32) {
	wl_registry_global,
	wl_registry_global_remove,
	wl_callback_done,
	wl_shm_format,
	wl_buffer_release,
	wl_data_offer_offer,
	wl_data_offer_source_actions,
	wl_data_offer_action,
	wl_data_source_target,
	wl_data_source_send,
	wl_data_source_cancelled,
	wl_data_source_dnd_drop_performed,
	wl_data_source_dnd_finished,
	wl_data_source_action,
	wl_data_device_data_offer,
	wl_data_device_enter,
	wl_data_device_leave,
	wl_data_device_motion,
	wl_data_device_drop,
	wl_data_device_selection,
	wl_shell_surface_ping,
	wl_shell_surface_configure,
	wl_shell_surface_popup_done,
	wl_surface_enter,
	wl_surface_leave,
	wl_surface_preferred_buffer_scale,
	wl_surface_preferred_buffer_transform,
	wl_seat_capabilities,
	wl_seat_name,
	wl_pointer_enter,
	wl_pointer_leave,
	wl_pointer_motion,
	wl_pointer_button,
	wl_pointer_axis,
	wl_pointer_frame,
	wl_pointer_axis_source,
	wl_pointer_axis_stop,
	wl_pointer_axis_discrete,
	wl_pointer_axis_value120,
	wl_pointer_axis_relative_direction,
	wl_keyboard_keymap,
	wl_keyboard_enter,
	wl_keyboard_leave,
	wl_keyboard_key,
	wl_keyboard_modifiers,
	wl_keyboard_repeat_info,
	wl_touch_down,
	wl_touch_up,
	wl_touch_motion,
	wl_touch_frame,
	wl_touch_cancel,
	wl_touch_shape,
	wl_touch_orientation,
	wl_output_geometry,
	wl_output_mode,
	wl_output_done,
	wl_output_scale,
	wl_output_name,
	wl_output_description,
	xdg_wm_base_ping,
	xdg_surface_configure,
	xdg_toplevel_configure,
	xdg_toplevel_close,
	xdg_toplevel_configure_bounds,
	xdg_toplevel_wm_capabilities,
	xdg_popup_configure,
	xdg_popup_popup_done,
	xdg_popup_repositioned,
};
pub const Event = union(EventType) {
	wl_registry_global: wayland.Registry.GlobalEvent,
	wl_registry_global_remove: wayland.Registry.GlobalRemoveEvent,
	wl_callback_done: wayland.Callback.DoneEvent,
	wl_shm_format: wayland.Shm.FormatEvent,
	wl_buffer_release: wayland.Buffer.ReleaseEvent,
	wl_data_offer_offer: wayland.DataOffer.OfferEvent,
	wl_data_offer_source_actions: wayland.DataOffer.SourceActionsEvent,
	wl_data_offer_action: wayland.DataOffer.ActionEvent,
	wl_data_source_target: wayland.DataSource.TargetEvent,
	wl_data_source_send: wayland.DataSource.SendEvent,
	wl_data_source_cancelled: wayland.DataSource.CancelledEvent,
	wl_data_source_dnd_drop_performed: wayland.DataSource.DndDropPerformedEvent,
	wl_data_source_dnd_finished: wayland.DataSource.DndFinishedEvent,
	wl_data_source_action: wayland.DataSource.ActionEvent,
	wl_data_device_data_offer: wayland.DataDevice.DataOfferEvent,
	wl_data_device_enter: wayland.DataDevice.EnterEvent,
	wl_data_device_leave: wayland.DataDevice.LeaveEvent,
	wl_data_device_motion: wayland.DataDevice.MotionEvent,
	wl_data_device_drop: wayland.DataDevice.DropEvent,
	wl_data_device_selection: wayland.DataDevice.SelectionEvent,
	wl_shell_surface_ping: wayland.ShellSurface.PingEvent,
	wl_shell_surface_configure: wayland.ShellSurface.ConfigureEvent,
	wl_shell_surface_popup_done: wayland.ShellSurface.PopupDoneEvent,
	wl_surface_enter: wayland.Surface.EnterEvent,
	wl_surface_leave: wayland.Surface.LeaveEvent,
	wl_surface_preferred_buffer_scale: wayland.Surface.PreferredBufferScaleEvent,
	wl_surface_preferred_buffer_transform: wayland.Surface.PreferredBufferTransformEvent,
	wl_seat_capabilities: wayland.Seat.CapabilitiesEvent,
	wl_seat_name: wayland.Seat.NameEvent,
	wl_pointer_enter: wayland.Pointer.EnterEvent,
	wl_pointer_leave: wayland.Pointer.LeaveEvent,
	wl_pointer_motion: wayland.Pointer.MotionEvent,
	wl_pointer_button: wayland.Pointer.ButtonEvent,
	wl_pointer_axis: wayland.Pointer.AxisEvent,
	wl_pointer_frame: wayland.Pointer.FrameEvent,
	wl_pointer_axis_source: wayland.Pointer.AxisSourceEvent,
	wl_pointer_axis_stop: wayland.Pointer.AxisStopEvent,
	wl_pointer_axis_discrete: wayland.Pointer.AxisDiscreteEvent,
	wl_pointer_axis_value120: wayland.Pointer.AxisValue120Event,
	wl_pointer_axis_relative_direction: wayland.Pointer.AxisRelativeDirectionEvent,
	wl_keyboard_keymap: wayland.Keyboard.KeymapEvent,
	wl_keyboard_enter: wayland.Keyboard.EnterEvent,
	wl_keyboard_leave: wayland.Keyboard.LeaveEvent,
	wl_keyboard_key: wayland.Keyboard.KeyEvent,
	wl_keyboard_modifiers: wayland.Keyboard.ModifiersEvent,
	wl_keyboard_repeat_info: wayland.Keyboard.RepeatInfoEvent,
	wl_touch_down: wayland.Touch.DownEvent,
	wl_touch_up: wayland.Touch.UpEvent,
	wl_touch_motion: wayland.Touch.MotionEvent,
	wl_touch_frame: wayland.Touch.FrameEvent,
	wl_touch_cancel: wayland.Touch.CancelEvent,
	wl_touch_shape: wayland.Touch.ShapeEvent,
	wl_touch_orientation: wayland.Touch.OrientationEvent,
	wl_output_geometry: wayland.Output.GeometryEvent,
	wl_output_mode: wayland.Output.ModeEvent,
	wl_output_done: wayland.Output.DoneEvent,
	wl_output_scale: wayland.Output.ScaleEvent,
	wl_output_name: wayland.Output.NameEvent,
	wl_output_description: wayland.Output.DescriptionEvent,
	xdg_wm_base_ping: xdg_shell.XdgWmBase.PingEvent,
	xdg_surface_configure: xdg_shell.XdgSurface.ConfigureEvent,
	xdg_toplevel_configure: xdg_shell.XdgToplevel.ConfigureEvent,
	xdg_toplevel_close: xdg_shell.XdgToplevel.CloseEvent,
	xdg_toplevel_configure_bounds: xdg_shell.XdgToplevel.ConfigureBoundsEvent,
	xdg_toplevel_wm_capabilities: xdg_shell.XdgToplevel.WmCapabilitiesEvent,
	xdg_popup_configure: xdg_shell.XdgPopup.ConfigureEvent,
	xdg_popup_popup_done: xdg_shell.XdgPopup.PopupDoneEvent,
	xdg_popup_repositioned: xdg_shell.XdgPopup.RepositionedEvent,
};
